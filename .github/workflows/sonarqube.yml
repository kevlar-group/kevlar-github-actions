name: SonarQube Job
on:
  workflow_call:
    inputs:
      java-version:
        description: 'Java version to use'
        required: false
        type: string
        default: '17'
      sonar-project-key:
        description: 'SonarQube project key'
        required: true
        type: string
      sonar-project-name:
        description: 'SonarQube project name'
        required: true
        type: string
      project-type:
        description: 'Project type (java, react, nextjs, nestjs)'
        required: true
        type: string
        default: 'java'
    secrets:
      sonar-token:
        description: 'SonarQube token'
        required: true
      sonar-host-url:
        description: 'SonarQube host URL'
        required: true

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK (for Java projects)
      if: inputs.project-type == 'java'
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'temurin'
        cache: maven

    - name: Set up Node.js (for JavaScript/TypeScript projects)
      if: inputs.project-type != 'java'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies (React.js)
      if: inputs.project-type == 'react'
      run: npm ci

    - name: Install dependencies (Next.js)
      if: inputs.project-type == 'nextjs'
      run: npm ci

    - name: Install dependencies (NestJS)
      if: inputs.project-type == 'nestjs'
      run: npm ci

    - name: SonarQube Analysis (Java)
      if: inputs.project-type == 'java'
      run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar
      env:
        SONAR_TOKEN: ${{ secrets.sonar-token }}
        SONAR_HOST_URL: ${{ secrets.sonar-host-url }}
        SONAR_PROJECT_KEY: ${{ inputs.sonar-project-key }}
        SONAR_PROJECT_NAME: ${{ inputs.sonar-project-name }}

    - name: SonarQube Analysis (React.js)
      if: inputs.project-type == 'react'
      run: |
        npm install -g sonarqube-scanner
        sonar-scanner \
          -Dsonar.projectKey=${{ inputs.sonar-project-key }} \
          -Dsonar.projectName="${{ inputs.sonar-project-name }}" \
          -Dsonar.sources=src \
          -Dsonar.host.url=${{ secrets.sonar-host-url }} \
          -Dsonar.login=${{ secrets.sonar-token }}
      env:
        SONAR_TOKEN: ${{ secrets.sonar-token }}
        SONAR_HOST_URL: ${{ secrets.sonar-host-url }}

    - name: SonarQube Analysis (Next.js)
      if: inputs.project-type == 'nextjs'
      run: |
        npm install -g sonarqube-scanner
        sonar-scanner \
          -Dsonar.projectKey=${{ inputs.sonar-project-key }} \
          -Dsonar.projectName="${{ inputs.sonar-project-name }}" \
          -Dsonar.sources=src,components,pages \
          -Dsonar.host.url=${{ secrets.sonar-host-url }} \
          -Dsonar.login=${{ secrets.sonar-token }}
      env:
        SONAR_TOKEN: ${{ secrets.sonar-token }}
        SONAR_HOST_URL: ${{ secrets.sonar-host-url }}

    - name: SonarQube Analysis (NestJS)
      if: inputs.project-type == 'nestjs'
      run: |
        npm install -g sonarqube-scanner
        sonar-scanner \
          -Dsonar.projectKey=${{ inputs.sonar-project-key }} \
          -Dsonar.projectName="${{ inputs.sonar-project-name }}" \
          -Dsonar.sources=src \
          -Dsonar.host.url=${{ secrets.sonar-host-url }} \
          -Dsonar.login=${{ secrets.sonar-token }}
      env:
        SONAR_TOKEN: ${{ secrets.sonar-token }}
        SONAR_HOST_URL: ${{ secrets.sonar-host-url }}
